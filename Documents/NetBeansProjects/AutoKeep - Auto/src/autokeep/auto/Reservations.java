/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package autokeep.auto;

import autokeep.auto.AdminModels.ReservationModel;
import autokeep.auto.AdminModels.UserModel;
import autokeep.auto.AdminModels.VehicleModel;
import autokeep.auto.Communication.AdminSocket;
import autokeep.auto.Communication.MessageControl;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Yuval
 */
public class Reservations extends javax.swing.JFrame {

    /**
     * Creates new form Users
     */
    DefaultTableModel tableModel;
    List<ReservationModel> reservationsList;
    List<UserModel> usersList;
    List<VehicleModel> carsList;

    private void setReservationList() {
        this.reservationsList.clear();
        if (AdminSocket.getreservationList() != null) {
            while (!AdminSocket.getreservationList().isEmpty()) {
                this.reservationsList.add(AdminSocket.getreservationList().poll());
            }
        } else {

        }
    }

    public Reservations() {
        this.reservationsList = new ArrayList<>();
        this.usersList = new ArrayList<>();
        this.carsList = new ArrayList<>();

        initComponents();
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        tableModel = (DefaultTableModel) reservationsTable.getModel();

        if (AdminSocket.getreservationList() == null) {
            Menu adminMenu = new Menu();
            adminMenu.setVisible(true);
            this.dispose();
        } else {
            setReservationList();
            displayItems();

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newReservationDialog = new javax.swing.JDialog();
        newuserOKButton = new javax.swing.JButton();
        newUserCancelButtun = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        newEmailText = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        newCreateDateText = new javax.swing.JFormattedTextField();
        newCarComboBox = new javax.swing.JComboBox<>();
        newNameComboBox = new javax.swing.JComboBox<>();
        newStartDateText = new datechooser.beans.DateChooserCombo();
        newEndDateText = new datechooser.beans.DateChooserCombo();
        updateCancelReservationDialog = new javax.swing.JDialog();
        updateCancelOKButton = new javax.swing.JButton();
        updateCancelButtun = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        newEmailText1 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        newCreateDateText1 = new javax.swing.JFormattedTextField();
        newCarComboBox1 = new javax.swing.JComboBox<>();
        newNameComboBox1 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        idText1 = new javax.swing.JFormattedTextField();
        cancelDateText1 = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        activeText1 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        cancelReservation = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        cancelReasonsText1 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        newStartDateText1 = new datechooser.beans.DateChooserCombo();
        newEndDateText1 = new datechooser.beans.DateChooserCombo();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationsTable = new javax.swing.JTable();
        returnButton = new javax.swing.JButton();
        newButton = new javax.swing.JButton();
        updateDeleteButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        emailText = new javax.swing.JTextField();
        refreshButton = new javax.swing.JButton();
        usernameText = new javax.swing.JTextField();
        activeText = new javax.swing.JComboBox<>();
        idSpinner = new javax.swing.JLabel();
        createDateText = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        startDateText = new javax.swing.JFormattedTextField();
        endDateText = new javax.swing.JFormattedTextField();
        idText = new javax.swing.JFormattedTextField();
        carPlateText = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        cancelReasonsText = new javax.swing.JFormattedTextField();
        cancelDateText = new javax.swing.JTextField();

        newuserOKButton.setText("OK");
        newuserOKButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newuserOKButtonActionPerformed(evt);
            }
        });

        newUserCancelButtun.setText("Cancel");
        newUserCancelButtun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserCancelButtunActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel27.setText("New Reservation Menu");

        jLabel14.setText("Car Details");

        jLabel15.setText("Start Date ");

        jLabel16.setText("Create Date");

        jLabel17.setText("End Date");

        newEmailText.setEditable(false);
        newEmailText.setEnabled(false);
        newEmailText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newEmailTextFocusLost(evt);
            }
        });

        jLabel28.setText("Name");

        jLabel29.setText("Email");

        newCreateDateText.setEditable(false);
        newCreateDateText.setEnabled(false);

        newCarComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCarComboBoxActionPerformed(evt);
            }
        });

        newNameComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                newNameComboBoxItemStateChanged(evt);
            }
        });
        newNameComboBox.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                newNameComboBoxFocusLost(evt);
            }
        });
        newNameComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newNameComboBoxActionPerformed(evt);
            }
        });

        newStartDateText.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    newStartDateText.setNothingAllowed(false);
    newStartDateText.setWeekStyle(datechooser.view.WeekDaysStyle.FULL);
    newStartDateText.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 16));
    newStartDateText.setLocale(new java.util.Locale("iw", "IL", ""));
    newStartDateText.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

    newEndDateText.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
newEndDateText.setWeekStyle(datechooser.view.WeekDaysStyle.FULL);
newEndDateText.setFieldFont(new java.awt.Font("Tahoma", java.awt.Font.BOLD, 16));
newEndDateText.setLocale(new java.util.Locale("iw", "IL", ""));
newEndDateText.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

javax.swing.GroupLayout newReservationDialogLayout = new javax.swing.GroupLayout(newReservationDialog.getContentPane());
newReservationDialog.getContentPane().setLayout(newReservationDialogLayout);
newReservationDialogLayout.setHorizontalGroup(
    newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newReservationDialogLayout.createSequentialGroup()
        .addContainerGap(82, Short.MAX_VALUE)
        .addComponent(jLabel27)
        .addGap(75, 75, 75))
    .addGroup(newReservationDialogLayout.createSequentialGroup()
        .addGap(42, 42, 42)
        .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newReservationDialogLayout.createSequentialGroup()
                .addComponent(newuserOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newUserCancelButtun, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(newReservationDialogLayout.createSequentialGroup()
                .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addGroup(newReservationDialogLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29)))
                    .addComponent(jLabel14))
                .addGap(50, 50, 50)
                .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newCreateDateText)
                    .addComponent(newCarComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newEmailText)
                    .addComponent(newNameComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newStartDateText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(newEndDateText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        .addGap(56, 56, 56))
    );
    newReservationDialogLayout.setVerticalGroup(
        newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newReservationDialogLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jLabel27)
            .addGap(14, 14, 14)
            .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel28)
                .addComponent(newNameComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel29)
                .addComponent(newEmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(19, 19, 19)
            .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel14)
                .addComponent(newCarComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel16)
                .addComponent(newCreateDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel15)
                .addComponent(newStartDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel17)
                .addComponent(newEndDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
            .addGroup(newReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(newuserOKButton)
                .addComponent(newUserCancelButtun))
            .addContainerGap(28, Short.MAX_VALUE))
    );

    updateCancelReservationDialog.setResizable(false);

    updateCancelOKButton.setText("OK");
    updateCancelOKButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            updateCancelOKButtonActionPerformed(evt);
        }
    });

    updateCancelButtun.setText("Cancel");
    updateCancelButtun.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            updateCancelButtunActionPerformed(evt);
        }
    });

    jLabel30.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    jLabel30.setText("Update / Cancel Reservation");

    jLabel18.setText("Car Details");

    jLabel19.setText("Start Date (DD-MM-YYYY)");

    jLabel20.setText("Create Date");

    jLabel21.setText("End Date (DD-MM-YYYY)");

    newEmailText1.setEditable(false);
    newEmailText1.setEnabled(false);
    newEmailText1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            newEmailText1FocusLost(evt);
        }
    });

    jLabel31.setText("Name");

    jLabel32.setText("Email");

    newCreateDateText1.setEditable(false);
    newCreateDateText1.setEnabled(false);

    newCarComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            newCarComboBox1ActionPerformed(evt);
        }
    });

    newNameComboBox1.addItemListener(new java.awt.event.ItemListener() {
        public void itemStateChanged(java.awt.event.ItemEvent evt) {
            newNameComboBox1ItemStateChanged(evt);
        }
    });
    newNameComboBox1.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            newNameComboBox1FocusLost(evt);
        }
    });
    newNameComboBox1.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            newNameComboBox1ActionPerformed(evt);
        }
    });

    jLabel12.setText("Cancel Reaseons");

    idText1.setEditable(false);
    idText1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
    idText1.setEnabled(false);

    cancelDateText1.setEnabled(false);

    jLabel13.setText("ID :");

    jLabel22.setText("Canceled");

    activeText1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "True", "False" }));
    activeText1.setEnabled(false);

    jLabel23.setText("Cancel Date");

    cancelReservation.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            cancelReservationActionPerformed(evt);
        }
    });

    jLabel24.setText("Do you want to cancel ?");

    newStartDateText1.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
        new datechooser.view.appearance.ViewAppearance("custom",
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                true,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 255),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.ButtonPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(128, 128, 128),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(0, 0, 255),
                false,
                true,
                new datechooser.view.appearance.swing.LabelPainter()),
            new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
                new java.awt.Color(0, 0, 0),
                new java.awt.Color(255, 0, 0),
                false,
                false,
                new datechooser.view.appearance.swing.ButtonPainter()),
            (datechooser.view.BackRenderer)null,
            false,
            true)));
newStartDateText1.setNothingAllowed(false);
newStartDateText1.setWeekStyle(datechooser.view.WeekDaysStyle.FULL);
newStartDateText1.setLocale(new java.util.Locale("iw", "", ""));
newStartDateText1.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

newEndDateText1.setCurrentView(new datechooser.view.appearance.AppearancesList("Bordered",
    new datechooser.view.appearance.ViewAppearance("custom",
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            true,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
            new java.awt.Color(0, 0, 255),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.ButtonPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
            new java.awt.Color(128, 128, 128),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.LabelPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(0, 0, 255),
            false,
            true,
            new datechooser.view.appearance.swing.LabelPainter()),
        new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 16),
            new java.awt.Color(0, 0, 0),
            new java.awt.Color(255, 0, 0),
            false,
            false,
            new datechooser.view.appearance.swing.ButtonPainter()),
        (datechooser.view.BackRenderer)null,
        false,
        true)));
newEndDateText1.setNothingAllowed(false);
newEndDateText1.setWeekStyle(datechooser.view.WeekDaysStyle.FULL);
newEndDateText1.setLocale(new java.util.Locale("iw", "IL", ""));
newEndDateText1.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);

javax.swing.GroupLayout updateCancelReservationDialogLayout = new javax.swing.GroupLayout(updateCancelReservationDialog.getContentPane());
updateCancelReservationDialog.getContentPane().setLayout(updateCancelReservationDialogLayout);
updateCancelReservationDialogLayout.setHorizontalGroup(
updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateCancelReservationDialogLayout.createSequentialGroup()
    .addGap(0, 0, Short.MAX_VALUE)
    .addComponent(jLabel30)
    .addGap(56, 56, 56))
    .addGroup(updateCancelReservationDialogLayout.createSequentialGroup()
        .addGap(42, 42, 42)
        .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateCancelReservationDialogLayout.createSequentialGroup()
                .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(updateCancelReservationDialogLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(49, 49, 49)
                        .addComponent(cancelDateText1))
                    .addGroup(updateCancelReservationDialogLayout.createSequentialGroup()
                        .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel13))
                        .addGap(69, 69, 69)
                        .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(activeText1, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idText1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateCancelReservationDialogLayout.createSequentialGroup()
                        .addComponent(updateCancelOKButton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateCancelButtun, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(updateCancelReservationDialogLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelReasonsText1)))
                .addGap(0, 38, Short.MAX_VALUE))
            .addGroup(updateCancelReservationDialogLayout.createSequentialGroup()
                .addComponent(jLabel24)
                .addGap(18, 18, 18)
                .addComponent(cancelReservation, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(updateCancelReservationDialogLayout.createSequentialGroup()
                .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, updateCancelReservationDialogLayout.createSequentialGroup()
                        .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel19)
                            .addComponent(jLabel20)
                            .addGroup(updateCancelReservationDialogLayout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel32)))
                            .addComponent(jLabel18))
                        .addGap(50, 50, 50)
                        .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newCreateDateText1)
                            .addComponent(newCarComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newEmailText1)
                            .addComponent(newNameComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newStartDateText1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newEndDateText1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(38, 38, 38))))
    );
    updateCancelReservationDialogLayout.setVerticalGroup(
        updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updateCancelReservationDialogLayout.createSequentialGroup()
            .addGap(12, 12, 12)
            .addComponent(jLabel30)
            .addGap(18, 18, 18)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel31)
                .addComponent(newNameComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel32)
                .addComponent(newEmailText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGap(19, 19, 19)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel18)
                .addComponent(newCarComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel20)
                .addComponent(newCreateDateText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel19)
                .addComponent(newStartDateText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel21)
                .addComponent(newEndDateText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel24)
                .addComponent(cancelReservation))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cancelDateText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel23))
            .addGap(16, 16, 16)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(jLabel12)
                .addComponent(cancelReasonsText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(activeText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel22))
            .addGap(18, 18, 18)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(idText1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel13))
            .addGap(43, 43, 43)
            .addGroup(updateCancelReservationDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(updateCancelOKButton)
                .addComponent(updateCancelButtun))
            .addGap(33, 33, 33))
    );

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setResizable(false);

    reservationsTable.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {

        },
        new String [] {
            "ID", "Name", "Email", "Car Plate", "Reservation Create Date", "Start Date", "End Date", "Cancel Date", "Cancel Reasons", "Is Cancel"
        }
    ) {
        Class[] types = new Class [] {
            java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
        };
        boolean[] canEdit = new boolean [] {
            false, false, false, false, false, false, false, false, false, false
        };

        public Class getColumnClass(int columnIndex) {
            return types [columnIndex];
        }

        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return canEdit [columnIndex];
        }
    });
    reservationsTable.setColumnSelectionAllowed(true);
    reservationsTable.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            reservationsTableMouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(reservationsTable);
    reservationsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

    returnButton.setText("Return");
    returnButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            returnButtonActionPerformed(evt);
        }
    });

    newButton.setText("New Reservation ");
    newButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            newButtonActionPerformed(evt);
        }
    });

    updateDeleteButton.setText("Update / Delete");
    updateDeleteButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            updateDeleteButtonActionPerformed(evt);
        }
    });

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    jLabel1.setText("Reservations Menu");

    jLabel2.setText("Name");

    jLabel4.setText("Email");

    jLabel6.setText("Car Details");

    jLabel8.setText("Start Date");

    jLabel9.setText("Create Date");

    jLabel10.setText("End Date");

    jLabel11.setText("Is Cancel ?");

    emailText.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            emailTextFocusLost(evt);
        }
    });

    refreshButton.setText("Refresh");
    refreshButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            refreshButtonMouseClicked(evt);
        }
    });
    refreshButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            refreshButtonActionPerformed(evt);
        }
    });

    usernameText.addFocusListener(new java.awt.event.FocusAdapter() {
        public void focusLost(java.awt.event.FocusEvent evt) {
            usernameTextFocusLost(evt);
        }
    });
    usernameText.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            usernameTextActionPerformed(evt);
        }
    });

    activeText.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "True", "False" }));

    jLabel5.setText("Cancel Date");

    jLabel7.setText("Cancel Reaseons");

    startDateText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy"))));

    endDateText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

    idText.setEditable(false);
    idText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(java.text.NumberFormat.getIntegerInstance())));
    idText.setEnabled(false);

    jLabel3.setText("ID :");

    cancelReasonsText.setEditable(false);
    cancelReasonsText.setEnabled(false);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jLabel2)
                        .addComponent(jLabel6)
                        .addComponent(jLabel9)
                        .addComponent(jLabel8)
                        .addComponent(jLabel5)
                        .addComponent(jLabel10)
                        .addComponent(jLabel7))
                    .addGap(11, 11, 11)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGap(0, 1064, Short.MAX_VALUE)
                            .addComponent(idSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(513, 513, 513))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(emailText, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                .addComponent(createDateText, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                .addComponent(usernameText, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                .addComponent(activeText, 0, 213, Short.MAX_VALUE)
                                .addComponent(startDateText)
                                .addComponent(endDateText)
                                .addComponent(carPlateText, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                .addComponent(cancelReasonsText)
                                .addComponent(cancelDateText))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane1))))
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGap(0, 1376, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(updateDeleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(refreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(25, 25, 25)
            .addComponent(jLabel1)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(idSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(6, 6, 6)
                            .addComponent(jLabel2)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4)
                                .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(15, 15, 15)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(carPlateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(usernameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(createDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(19, 19, 19)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(startDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10)
                        .addComponent(endDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(cancelDateText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(cancelReasonsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(activeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(returnButton)
                .addComponent(updateDeleteButton)
                .addComponent(newButton)
                .addComponent(refreshButton))
            .addGap(18, 18, 18))
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        Menu adminMenu = new Menu();
        adminMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_returnButtonActionPerformed

    private void refreshButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshButtonMouseClicked

    }//GEN-LAST:event_refreshButtonMouseClicked

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed
        refreshData();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void reservationsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservationsTableMouseClicked
        int row = reservationsTable.getSelectedRow();
        showItem(reservationsList.get(row), "displayMenu");
    }//GEN-LAST:event_reservationsTableMouseClicked

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        if (createUserData()) {
            if (createCarsData()) {
                newCreateDateText.setText(new Date().toString());
                newStartDateText.setMinDate(Calendar.getInstance());
                newEndDateText.setMinDate(Calendar.getInstance());
                if (!reservationsList.isEmpty()) {
                    newReservationDialog.setVisible(true);
                    newReservationDialog.pack();
                    newReservationDialog.setLocationRelativeTo(null);
                    newReservationDialog.setDefaultCloseOperation(Users.DISPOSE_ON_CLOSE);
                    this.setEnabled(false);
                } else {
                    MessageControl.getInstance().sendError("DataBase is Empty !");
                }
            } else {
                MessageControl.getInstance().sendError("No Users DB and Cars DB ! \n\nWithout this you cannot create a New Reservation .");
            }
        } else {
            MessageControl.getInstance().sendError("No Users DB and Cars DB ! \n\nWithout this you cannot create a New Reservation .");
        }


    }//GEN-LAST:event_newButtonActionPerformed

    private void emailTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFocusLost

    }//GEN-LAST:event_emailTextFocusLost

    private void usernameTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usernameTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_usernameTextActionPerformed

    private void usernameTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_usernameTextFocusLost


    }//GEN-LAST:event_usernameTextFocusLost

    private void updateDeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDeleteButtonActionPerformed
        if (reservationsTable.getSelectedRow() != -1) {
            if (createUserData()) {
                if (createCarsData()) {
                    int row = reservationsTable.getSelectedRow();
                    showItem(reservationsList.get(row), "displayUpdate");
                    if (!reservationsList.isEmpty()) {
                        updateCancelReservationDialog.setVisible(true);
                        updateCancelReservationDialog.pack();
                        updateCancelReservationDialog.setLocationRelativeTo(null);
                        updateCancelReservationDialog.setDefaultCloseOperation(Users.DISPOSE_ON_CLOSE);
                        this.setEnabled(false);
                    } else {
                        MessageControl.getInstance().sendError("DataBase is Empty !");
                    }
                } else {
                    MessageControl.getInstance().sendError("No Users DB and Cars DB ! \n\nWithout this you cannot update/delete the reservation .");
                }
            } else {
                MessageControl.getInstance().sendError("No Users DB and Cars DB ! \n\nWithout this you cannot update/delete the reservation .");
            }
        } else {
            MessageControl.getInstance().sendInfo("Please select reservation from table first. then press update/delete");
        }
    }//GEN-LAST:event_updateDeleteButtonActionPerformed

    private void newNameComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNameComboBoxActionPerformed
        if (newNameComboBox.getSelectedIndex() != -1) {
            newEmailText.setText(usersList.get(newNameComboBox.getSelectedIndex()).getEmailAddress());
        }
    }//GEN-LAST:event_newNameComboBoxActionPerformed

    private void newNameComboBoxFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newNameComboBoxFocusLost

    }//GEN-LAST:event_newNameComboBoxFocusLost

    private void newNameComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_newNameComboBoxItemStateChanged

    }//GEN-LAST:event_newNameComboBoxItemStateChanged

    private void newCarComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCarComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCarComboBoxActionPerformed

    private void newEmailTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newEmailTextFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_newEmailTextFocusLost

    private void newUserCancelButtunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserCancelButtunActionPerformed
        this.setEnabled(true);
        newReservationDialog.dispose();
        refreshData();

    }//GEN-LAST:event_newUserCancelButtunActionPerformed

    private void newuserOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newuserOKButtonActionPerformed
        if (checkFields("new")) {
            try {
                AdminSocket.getInstance().SendOrderData(addItem(0), "New");
                MessageControl.getInstance().sendMSG();
                refreshData();
                this.setEnabled(true);
                newReservationDialog.dispose();
            } catch (IOException ex) {
                Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            //MessageControl.getInstance().sendAlert("Some Filleds are empty!\n\nPlease fill again");
        }
    }//GEN-LAST:event_newuserOKButtonActionPerformed

    private void updateCancelOKButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCancelOKButtonActionPerformed
        if (!cancelReservation.isSelected() && checkFields("update")) {
            try {
                AdminSocket.getInstance().SendOrderData(addItem(1), "Update");
                MessageControl.getInstance().sendMSG();
                refreshData();
                this.setEnabled(true);
                updateCancelReservationDialog.dispose();
                refreshData();
            } catch (IOException ex) {
                Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            try {
                AdminSocket.getInstance().SendOrderData(addItem(2), "Cancel");
                MessageControl.getInstance().sendMSG();
                refreshData();
                this.setEnabled(true);
                updateCancelReservationDialog.dispose();
                refreshData();
            } catch (IOException ex) {
                Logger.getLogger(Users.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_updateCancelOKButtonActionPerformed

    private void updateCancelButtunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCancelButtunActionPerformed
        this.setEnabled(true);
        cancelReservation.setSelected(false);
        updateCancelReservationDialog.dispose();
        refreshData();
    }//GEN-LAST:event_updateCancelButtunActionPerformed

    private void newEmailText1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newEmailText1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_newEmailText1FocusLost

    private void newCarComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCarComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCarComboBox1ActionPerformed

    private void newNameComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_newNameComboBox1ItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_newNameComboBox1ItemStateChanged

    private void newNameComboBox1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_newNameComboBox1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_newNameComboBox1FocusLost

    private void newNameComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newNameComboBox1ActionPerformed
        if (newNameComboBox1.getSelectedIndex() != -1) {
            newEmailText1.setText(usersList.get(newNameComboBox1.getSelectedIndex()).getEmailAddress());
        }
    }//GEN-LAST:event_newNameComboBox1ActionPerformed

    private void cancelReservationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelReservationActionPerformed

            if (cancelReservation.isSelected()) {
                activeText1.setSelectedIndex(0);
                cancelDateText1.setText(LocalDate.now().toString());
                cancelReasonsText1.setEnabled(true);
            } else {
                cancelDateText1.setText("");
                activeText1.setSelectedIndex(1);
                cancelReasonsText1.setText("");
                cancelReasonsText1.setEnabled(false);
            }
    }//GEN-LAST:event_cancelReservationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservations.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Reservations().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> activeText;
    private javax.swing.JComboBox<String> activeText1;
    private javax.swing.JTextField cancelDateText;
    private javax.swing.JFormattedTextField cancelDateText1;
    private javax.swing.JFormattedTextField cancelReasonsText;
    private javax.swing.JTextField cancelReasonsText1;
    private javax.swing.JCheckBox cancelReservation;
    private javax.swing.JFormattedTextField carPlateText;
    private javax.swing.JFormattedTextField createDateText;
    private javax.swing.JTextField emailText;
    private javax.swing.JFormattedTextField endDateText;
    private javax.swing.JLabel idSpinner;
    private javax.swing.JFormattedTextField idText;
    private javax.swing.JFormattedTextField idText1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton newButton;
    private javax.swing.JComboBox<String> newCarComboBox;
    private javax.swing.JComboBox<String> newCarComboBox1;
    private javax.swing.JFormattedTextField newCreateDateText;
    private javax.swing.JFormattedTextField newCreateDateText1;
    private javax.swing.JTextField newEmailText;
    private javax.swing.JTextField newEmailText1;
    private datechooser.beans.DateChooserCombo newEndDateText;
    private datechooser.beans.DateChooserCombo newEndDateText1;
    private javax.swing.JComboBox<String> newNameComboBox;
    private javax.swing.JComboBox<String> newNameComboBox1;
    private javax.swing.JDialog newReservationDialog;
    private datechooser.beans.DateChooserCombo newStartDateText;
    private datechooser.beans.DateChooserCombo newStartDateText1;
    private javax.swing.JButton newUserCancelButtun;
    private javax.swing.JButton newuserOKButton;
    private javax.swing.JButton refreshButton;
    private javax.swing.JTable reservationsTable;
    private javax.swing.JButton returnButton;
    private javax.swing.JFormattedTextField startDateText;
    private javax.swing.JButton updateCancelButtun;
    private javax.swing.JButton updateCancelOKButton;
    private javax.swing.JDialog updateCancelReservationDialog;
    private javax.swing.JButton updateDeleteButton;
    private javax.swing.JTextField usernameText;
    // End of variables declaration//GEN-END:variables

    public void showItem(ReservationModel item, String mode) {
        Calendar start = Calendar.getInstance(), end = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-dd-MM");
        try {
            start.setTime(sdf.parse(item.getReservationStartDate()));
            end.setTime(sdf.parse(item.getReservationEndDate()));
        } catch (ParseException ex) {
            Logger.getLogger(Reservations.class.getName()).log(Level.SEVERE, null, ex);
        }
        switch (mode) {
            case "displayMenu":
                idText.setText(String.valueOf(item.getReservationID()));
                usernameText.setText(item.getUser().getFullName());
                emailText.setText(item.getUser().getEmailAddress());
                carPlateText.setText(item.getVehicle().getFullVehicle());
                createDateText.setText(item.getReservationDate());
                startDateText.setText(item.getReservationStartDate());
                endDateText.setText(item.getReservationEndDate());
                cancelDateText.setText(item.getCancelationDate());
                cancelReasonsText.setText(item.getCancelationReason());
                activeText.setSelectedIndex(getIsCanceled(item.isCanceled()));
                break;
            case "displayUpdate":
                idText1.setText(String.valueOf(item.getReservationID()));
                newNameComboBox1.setSelectedIndex(getFullNamePosition());
                newEmailText1.setText(item.getUser().getEmailAddress());
                newCarComboBox1.setSelectedIndex(getFullCarPosition());
                newCreateDateText1.setText(item.getReservationDate());
                newStartDateText1.setSelectedDate(start);
                newEndDateText1.setSelectedDate(end);
                cancelDateText1.setText(item.getCancelationDate());
                cancelReasonsText1.setText(item.getCancelationReason());
                activeText1.setSelectedIndex(getIsCanceled(item.isCanceled()));
                if (activeText1.getSelectedIndex() == 0) {
                    cancelReservation.setEnabled(false);
                    cancelReasonsText1.setEnabled(false);
                }
                else{
                    cancelReservation.setEnabled(true);
                    cancelReasonsText1.setEnabled(true);
                }
                break;
        }

    }

    public int getFullNamePosition() {
        int found = -1;
        for (int i = 0; i < usersList.size(); i++) {
            if (usersList.get(i).getFullName().equals(usernameText.getText())) {
                found = i;
            }
        }
        return found;
    }

    public int getFullCarPosition() {
        int found = -1;
        for (int i = 0; i < carsList.size(); i++) {
            if (carsList.get(i).getFullVehicle().equals(carPlateText.getText())) {
                found = i;
            }
        }
        return found;
    }

    public int getIsCanceled(boolean data) {
        if (!data) {
            return 1;
        }
        return 0;
    }

    public boolean setIsCanceled(int data) {
        return data == 0;
    }

    public ReservationModel addItem(int mode) {
        ReservationModel temp = null;
        switch (mode) {
            case 0:
                temp = new ReservationModel(usersList.get(newNameComboBox.getSelectedIndex()),
                        carsList.get(newCarComboBox.getSelectedIndex()),
                        newCreateDateText.getText(),
                        newStartDateText.getText(),
                        newEndDateText.getText(),
                        "",
                        "",
                        false);
                break;
            case 1:
                temp = new ReservationModel(
                        Integer.valueOf(idText1.getText()),
                        usersList.get(newNameComboBox1.getSelectedIndex()),
                        carsList.get(newCarComboBox1.getSelectedIndex()),
                        newCreateDateText1.getText(),
                        newStartDateText1.getText(),
                        newEndDateText1.getText(),
                        setIsCanceled(activeText1.getSelectedIndex()),
                        "",
                        ""
                );
                break;
            case 2:
                temp = new ReservationModel(
                        Integer.valueOf(idText1.getText()),
                        usersList.get(newNameComboBox1.getSelectedIndex()),
                        carsList.get(newCarComboBox1.getSelectedIndex()),
                        newCreateDateText1.getText(),
                        newStartDateText1.getText(),
                        newEndDateText1.getText(),
                        setIsCanceled(activeText1.getSelectedIndex()),
                        cancelDateText1.getText(),
                        cancelReasonsText1.getText()
                );
                break;
            default:

        }
        return temp;
    }

    public void clearFields() {
        idText.setText("");
        usernameText.setText("");
        emailText.setText("");
        carPlateText.setText("");
        createDateText.setText("");
        startDateText.setText("");
        endDateText.setText("");
        cancelDateText.setText("");
        cancelReasonsText.setText("");
        activeText.setSelectedIndex(-1);
    }

    private void displayItems() {
        tableModel.setRowCount(0);
        reservationsList.forEach(item -> {
            Object[] rowdata = new Object[]{item.getReservationID(), item.getUser().getFullName(), item.getUser().getEmailAddress(),
                item.getVehicle().getFullVehicle(), item.getReservationDate(), item.getReservationStartDate(), item.getReservationEndDate(),
                item.getCancelationDate(), item.getCancelationReason(), item.isCanceled()};
            tableModel.insertRow(tableModel.getRowCount(), rowdata);
        });
    }

    public boolean checkFields(String mode) {
        switch (mode) {
            case "new":
                if (newNameComboBox.getSelectedIndex() == -1) {
                    MessageControl.getInstance().sendError("No Name Select !!!");
                    return false;
                } else if (newCarComboBox.getSelectedIndex() == -1) {
                    MessageControl.getInstance().sendError("No Car Select !!!");
                    return false;
                } else if (newStartDateText.getSelectedDate().after(newEndDateText.getSelectedDate())) {
                    MessageControl.getInstance().sendError("Start date cannot be After End Date");
                    return false;
                }
                break;
            case "update":
                if (newNameComboBox1.getSelectedIndex() == -1) {
                    MessageControl.getInstance().sendError("No Name Select !!!");
                    return false;
                } else if (newCarComboBox1.getSelectedIndex() == -1) {
                    MessageControl.getInstance().sendError("No Car Select !!!");
                    return false;
                } else if (newStartDateText1.getSelectedDate().after(newEndDateText1.getSelectedDate())) {
                    MessageControl.getInstance().sendError("Start date cannot be After End Date");
                    return false;
                }
                break;
        }

        return true;
    }

    private void refreshData() {
        try {
            AdminSocket.getInstance().SendOrders();
            setReservationList();
        } catch (IOException ex) {
            Logger.getLogger(Reservations.class.getName()).log(Level.SEVERE, null, ex);
        }
        displayItems();
        clearFields();
    }

    private boolean createUserData() {
        try {
            AdminSocket.getInstance().SendUsers();
        } catch (IOException ex) {
            Logger.getLogger(Reservations.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
        if (AdminSocket.getUsersList() != null) {
            while (!AdminSocket.getUsersList().isEmpty()) {
                this.usersList.add(AdminSocket.getUsersList().poll());
            }
            DefaultComboBoxModel userComboBox = new DefaultComboBoxModel();
            for (int i = 0; i < usersList.size(); i++) {
                userComboBox.addElement(usersList.get(i).getFullName());
            }
            newNameComboBox.setModel(userComboBox);
            newNameComboBox.setSelectedIndex(-1);
            newNameComboBox1.setModel(userComboBox);
            newNameComboBox1.setSelectedIndex(-1);
            return true;
        }
        return false;

    }

    private boolean createCarsData() {
        try {
            AdminSocket.getInstance().SendCars();
        } catch (IOException ex) {
            Logger.getLogger(Reservations.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
        if (AdminSocket.getCarsList() != null) {
            while (!AdminSocket.getCarsList().isEmpty()) {
                this.carsList.add(AdminSocket.getCarsList().poll());
            }
            DefaultComboBoxModel carsComboBox = new DefaultComboBoxModel();
            for (int i = 0; i < carsList.size(); i++) {
                carsComboBox.addElement(carsList.get(i).getFullVehicle());
            }
            newCarComboBox.setModel(carsComboBox);
            newCarComboBox.setSelectedIndex(-1);
            newCarComboBox1.setModel(carsComboBox);
            newCarComboBox1.setSelectedIndex(-1);
            return true;
        }
        return false;
    }
}
